<!DOCTYPE html>
<html lang="en">

{{>coursehead}}

<body>
    {{>header}}

    <main>
        <div class="graphs">
            {{!--
            <!DOCTYPE html>
            <html>

            <head>
                <script src="https://d3js.org/d3.v7.min.js"></script>
                <style>
                    #barGraph {
                        width: auto;
                        height: auto;
                    }

                    @media only screen and (min-width:500px) {

                        .x-axis,
                        .y-axis {
                            font-size: 20px;
                            font-weight: bolder;
                        }
                    }

                    @media only screen and (min-width:400px) and (max-width:499px) {

                        .x-axis,
                        .y-axis {
                            font-size: 15px;
                            font-weight: bolder;
                        }
                    }

                    .bar {
                        fill: #ffd017;
                    }

                    .graphs {
                        margin: 40% auto 5% auto;
                    }

                    .axis text {
                        font-size: 12px;
                    }
                </style>
            </head>

            <body>
                <div id="graphContainer">
                    <svg id="barGraph"></svg>
                </div>

                <script>
                    // Sample data for the bar graph
                    const data = [
                        { category: 'IIT', value: 25 },
                        { category: 'NIT', value: 40 },
                        { category: 'University', value: 30 },
                        { category: 'Autonomous', value: 90 }
                    ];

                    // Set up the SVG element and dimensions
                    const container = document.getElementById("graphContainer");
                    const containerWidth = container.offsetWidth;
                    const containerHeight = containerWidth * 0.95;

                    const svg = d3.select("#barGraph")
                        .attr("width", containerWidth)
                        .attr("height", containerHeight);

                    const margin = { top: 20, right: 20, bottom: 40, left: 40 };
                    const width = containerWidth - margin.left - margin.right;
                    const height = containerHeight - margin.top - margin.bottom;

                    // Create the x and y scales
                    const xScale = d3.scaleBand()
                        .range([0, width])
                        .padding(0.2)
                        .domain(data.map(d => d.category));

                    const yScale = d3.scaleLinear()
                        .range([height, 0])
                        .domain([0, d3.max(data, d => d.value)]);

                    // Create the x and y axes
                    const xAxis = d3.axisBottom(xScale);
                    const yAxis = d3.axisLeft(yScale);

                    // Create the bars
                    const bars = svg.append("g")
                        .attr("transform", `translate(${margin.left},${margin.top})`)
                        .selectAll(".bar")
                        .data(data)
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", d => xScale(d.category))
                        .attr("y", height)
                        .attr("width", xScale.bandwidth())
                        .attr("height", 0)
                        .style("opacity", 0.7);

                    // Animation
                    bars.transition()
                        .duration(1000)
                        .delay((d, i) => i * 200)
                        .attr("y", d => yScale(d.value))
                        .attr("height", d => height - yScale(d.value));

                    // Append x axis
                    svg.append("g")
                        .attr("class", "x-axis")
                        .attr("transform", `translate(${margin.left},${height + margin.top})`)
                        .call(xAxis)
                        .append("text")
                        .attr("x", width / 2)
                        .attr("y", margin.bottom - 10)
                        .attr("text-anchor", "middle")
                        .text("Categories");

                    // Append y axis
                    svg.append("g")
                        .attr("class", "y-axis")
                        .attr("transform", `translate(${margin.left},${margin.top})`)
                        .call(yAxis)
                        .append("text")
                        .attr("transform", "rotate(-90)")
                        .attr("x", -height / 2)
                        .attr("y", -margin.left + 10)
                        .attr("text-anchor", "middle")
                        .text("Values");

                    // Handle window resize
                    window.addEventListener("resize", () => {
                        const newContainerWidth = container.offsetWidth;
                        const newContainerHeight = newContainerWidth * 0.75;

                        svg.attr("width", newContainerWidth)
                            .attr("height", newContainerHeight);

                        const newWidth = newContainerWidth - margin.left - margin.right;
                        const newHeight = newContainerHeight - margin.top - margin.bottom;

                        xScale.range([0, newWidth]);
                        yScale.range([newHeight, 0]);

                        svg.select(".x-axis")
                            .attr("transform", `translate(${margin.left},${newHeight + margin.top})`)
                            .call(xAxis);

                        svg.select(".y-axis")
                            .attr("transform", `translate(${margin.left},${margin.top})`)
                            .call(yAxis);

                        bars.attr("x", d => xScale(d.category))
                            .attr("y", d => yScale(d.value))
                            .attr("width", xScale.bandwidth())
                            .attr("height", d => newHeight - yScale(d.value));
                    });
                </script>
            </body>

            </html> --}}
            <img src="https://res.cloudinary.com/df6f8uemq/image/upload/v1695396121/xyz/images/bar-graph_x2qey2.svg"
                alt="">

        </div>
        <div class="cantainer">
            <div class="left-cantainer">
                <h1> <strong>Training</strong><br></h1>
                When preparing for placement, it is crucial to focus on various aspects to enhance your chances of
                success. Firstly, sharpen your technical skills by reviewing and reinforcing your knowledge in core
                technical areas related to your field of study. This includes programming languages, algorithms, data
                structures, databases, networking, and operating systems. Solve coding exercises and practice
                problem-solving questions from platforms like LeetCode, HackerRank, or CodeSignal. Engaging in small
                projects or contributing to open-source projects can also provide practical experience and further
                strengthen your skills.
                <br><br>
                Interview preparation is another vital component of placement readiness. Get familiar with common
                interview questions and practice articulating your answers effectively. Additionally, dedicate time to
                solving technical interview questions within time constraints to improve your problem-solving and coding
                abilities. Conducting mock interviews with friends or utilizing online platforms that offer interview
                practice can help you become more comfortable and confident in real interview scenarios.
                <br><br>
                Don't forget to work on building an impressive resume. Tailor your resume to highlight relevant skills,
                experiences, projects, and achievements. Craft concise yet impactful descriptions of your
                accomplishments, showcasing how you have applied your skills in practical settings.
                <br><br>
                By focusing on these areas - technical skills, interview preparation, and resume building â€“ you can
                enhance your training for placement and increase your chances of securing a desirable position. Remember
                to stay persistent, maintain a positive mindset, and seek feedback to continuously improve throughout
                your preparation journey.
            </div>
            <div class="right-cantainer">
                <h1> <strong>Placement</strong><br></h1>
                Securing a placement is a significant milestone in one's academic and professional journey. It provides
                an invaluable opportunity to apply theoretical knowledge in real-world scenarios and kickstart a
                successful career. The placement process involves a series of steps, including resume building,
                interviews, and assessments, which require diligent preparation. <br><br>
                Apart from technical skills, honing soft skills is equally crucial. Effective communication, teamwork,
                problem-solving, and adaptability are highly sought-after qualities by employers. Enhancing these skills
                through workshops, mock interviews, and group activities can significantly enhance your employability.
                <br><br>
                Lastly, developing a positive mindset and managing stress is essential during the placement process.
                Staying organized, setting realistic goals, and seeking guidance from mentors and career counselors can
                provide valuable support throughout the journey.
                <br><br>

                By investing time and effort into comprehensive placement preparation, individuals can increase their
                chances of securing rewarding job opportunities and setting a strong foundation for their professional
                careers. Remember, each step of the process is an opportunity for growth and learning, and with
                dedication and perseverance, success in placements can be achieved.
            </div>
        </div>

    </main>
    {{>footer}}
</body>

</html>